{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/olakunleyusuf/Desktop/Kunle Kodes/Node Server/Advanced-React/sick-fits/finalfit/components/Products.js\";\nimport { useQuery, gql } from '@apollo/client';\nimport styled from 'styled-components';\nimport ErrorMessage from './ErrorMessage';\nimport Item from './Item';\nimport Pagination from './Pagination';\nimport { perPage } from '../config';\nconst Center = styled.div.withConfig({\n  displayName: \"Products__Center\",\n  componentId: \"g7q1vp-0\"\n})([\"text-align:center;\"]);\nconst ItemsList = styled.div.withConfig({\n  displayName: \"Products__ItemsList\",\n  componentId: \"g7q1vp-1\"\n})([\"display:grid;grid-template-columns:1fr 1fr;grid-gap:60px;max-width:var(--maxWidth);margin:0 auto;\"]);\nconst ALL_ITEMS_QUERY = gql`\n    query ALL_ITEMS_QUERY($skip: Int = 0, $take: Int = ${perPage})  {\n        getAllItems(skip: $skip, take: $take, orderBy: {\n            createdAt: \"desc\"\n        }) {\n            id\n            title\n            price\n            description\n            image   \n        }\n    }\n`;\n\nconst AllItems = props => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(ALL_ITEMS_QUERY, {\n    variables: {\n      skip: props.page * perPage - perPage\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Center, {\n    children: [/*#__PURE__*/_jsxDEV(Pagination, {\n      page: props.page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ItemsList, {\n      children: data === null || data === void 0 ? void 0 : data.getAllItems.map(item => /*#__PURE__*/_jsxDEV(Item, {\n        item: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      page: props.page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\nconst Products = props => {\n  return /*#__PURE__*/_jsxDEV(Center, {\n    children: /*#__PURE__*/_jsxDEV(AllItems, {\n      page: props.page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Products;","map":{"version":3,"sources":["/Users/olakunleyusuf/Desktop/Kunle Kodes/Node Server/Advanced-React/sick-fits/finalfit/components/Products.js"],"names":["useQuery","gql","styled","ErrorMessage","Item","Pagination","perPage","Center","div","ItemsList","ALL_ITEMS_QUERY","AllItems","props","loading","error","data","variables","skip","page","getAllItems","map","item","id","Products"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,MAAMC,MAAM,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,0BAAZ;AAIA,MAAMC,SAAS,GAAEP,MAAM,CAACM,GAAT;AAAA;AAAA;AAAA,yGAAf;AAQA,MAAME,eAAe,GAAGT,GAAI;AAC5B,yDAAyDK,OAAQ;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;;AAcA,MAAMK,QAAQ,GAAGC,KAAK,IAAI;AACtB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2Bf,QAAQ,CAACU,eAAD,EAAkB;AACvDM,IAAAA,SAAS,EAAE;AACPC,MAAAA,IAAI,EAAEL,KAAK,CAACM,IAAN,GAAaZ,OAAb,GAAuBA;AADtB;AAD4C,GAAlB,CAAzC;AAMA,MAAGO,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACZ,MAAGC,KAAH,EAAU,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAGA;AAAtB;AAAA;AAAA;AAAA;AAAA,UAAP;AAEV,sBACI,QAAC,MAAD;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEF,KAAK,CAACM;AAAxB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAA,gBACMH,IADN,aACMA,IADN,uBACMA,IAAI,CAAEI,WAAN,CAAkBC,GAAlB,CAAsBC,IAAI,iBACxB,QAAC,IAAD;AAAoB,QAAA,IAAI,EAAEA;AAA1B,SAAWA,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,cADF;AADN;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEV,KAAK,CAACM;AAAxB;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CArBD;;AAuBA,MAAMK,QAAQ,GAAGX,KAAK,IAAI;AACtB,sBACI,QAAC,MAAD;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,KAAK,CAACM;AAAtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAND;;AAQA,eAAeK,QAAf","sourcesContent":["import { useQuery, gql } from '@apollo/client';\nimport styled from 'styled-components';\nimport ErrorMessage from './ErrorMessage';\nimport Item from './Item';\nimport Pagination from './Pagination';\nimport { perPage } from '../config';\n\nconst Center = styled.div`\n    text-align: center;\n`;\n\nconst ItemsList= styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 60px;\n    max-width: var(--maxWidth);\n    margin: 0 auto;\n`;\n\nconst ALL_ITEMS_QUERY = gql`\n    query ALL_ITEMS_QUERY($skip: Int = 0, $take: Int = ${perPage})  {\n        getAllItems(skip: $skip, take: $take, orderBy: {\n            createdAt: \"desc\"\n        }) {\n            id\n            title\n            price\n            description\n            image   \n        }\n    }\n`;\n\nconst AllItems = props => {\n    const { loading, error, data } = useQuery(ALL_ITEMS_QUERY, { \n        variables: {\n            skip: props.page * perPage - perPage\n        }\n    });\n\n    if(loading) return <p>loading...</p> \n    if(error) return <ErrorMessage error={ error } />\n\n    return (\n        <Center>\n            <Pagination page={props.page} />\n            <ItemsList>\n                { data?.getAllItems.map(item => (\n                    <Item key={item.id} item={item} />\n                )) }\n            </ItemsList>\n            <Pagination page={props.page} />\n        </Center>\n    ); \n};\n\nconst Products = props => {\n    return (\n        <Center>\n            <AllItems page={props.page} />\n        </Center>\n    )\n};\n\nexport default Products;"]},"metadata":{},"sourceType":"module"}