{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/olakunleyusuf/Desktop/Kunle Kodes/Node Server/Advanced-React/finalfit/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/olakunleyusuf/Desktop/Kunle Kodes/Node Server/Advanced-React/finalfit/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/olakunleyusuf/Desktop/Kunle Kodes/Node Server/Advanced-React/finalfit/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/olakunleyusuf/Desktop/Kunle Kodes/Node Server/Advanced-React/finalfit/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/olakunleyusuf/Desktop/Kunle Kodes/Node Server/Advanced-React/finalfit/components/SignUpForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation SIGNUP_MUTATION ($email: String!, $name: String!, $password: String!) {\\n        signup(data: {\\n            name: $name\\n            email: $email\\n            password: $password\\n        }) {\\n            id\\n            name\\n            email\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useMutation } from '@apollo/client';\nimport Form from './styles/Form';\nimport ErrorMessage from './ErrorMessage';\nimport useForm from '../lib/useForm';\nimport { CURRENT_USER_QUERY } from './User';\nvar SIGNUP_MUTATION = gql(_templateObject());\n\nvar SignUpForm = function SignUpForm() {\n  _s();\n\n  var _useForm = useForm({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  }),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      resetForm = _useForm.resetForm;\n\n  var _useMutation = useMutation(SIGNUP_MUTATION, {\n    variables: inputs,\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      signup = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      error = _useMutation2$.error,\n      loading = _useMutation2$.loading;\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    onSubmit: /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return signup();\n\n              case 3:\n                resetForm();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(),\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: loading,\n      \"aria-busy\": loading,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign Up For An Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"name\",\n          value: inputs.name,\n          required: true,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"email\",\n          value: inputs.email,\n          required: true,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"password\",\n          value: inputs.password,\n          required: true,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign Up!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(SignUpForm, \"7TVt7HbTjudAeauhm6s5sYWGnEg=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = SignUpForm;\nexport default SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"sources":["/Users/olakunleyusuf/Desktop/Kunle Kodes/Node Server/Advanced-React/finalfit/components/SignUpForm.js"],"names":["gql","useMutation","Form","ErrorMessage","useForm","CURRENT_USER_QUERY","SIGNUP_MUTATION","SignUpForm","name","email","password","inputs","handleChange","resetForm","variables","refetchQueries","query","signup","error","loading","e","preventDefault"],"mappings":"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","sourcesContent":["import { gql, useMutation } from '@apollo/client';\nimport Form from './styles/Form';\nimport ErrorMessage from './ErrorMessage';\nimport useForm from '../lib/useForm';\nimport { CURRENT_USER_QUERY } from './User';\n\nconst SIGNUP_MUTATION = gql`\n    mutation SIGNUP_MUTATION ($email: String!, $name: String!, $password: String!) {\n        signup(data: {\n            name: $name\n            email: $email\n            password: $password\n        }) {\n            id\n            name\n            email\n        }\n    }\n`;\n\nconst SignUpForm = () => {\n\n    const {inputs, handleChange, resetForm} = useForm({\n        name: \"\",\n        email: \"\",\n        password: \"\"\n    })\n    const [signup, {error, loading}] = useMutation(SIGNUP_MUTATION, {\n        variables: inputs,\n        refetchQueries: [{\n            query: CURRENT_USER_QUERY\n        }]\n    });\n\n    return (\n        <Form method=\"POST\" onSubmit={async e => {\n            e.preventDefault();\n            await signup();\n            resetForm();\n        }}>\n            <fieldset disabled={loading} aria-busy={loading}>\n                <h2>Sign Up For An Account</h2>\n                <ErrorMessage error={error} />\n                <label htmlFor=\"name\">\n                    Name\n                    <input \n                        type=\"text\" \n                        name=\"name\" \n                        placeholder=\"name\" \n                        value={inputs.name }\n                        required\n                        onChange= { handleChange }\n                    />\n                </label>\n                <label htmlFor=\"email\">\n                    Email\n                    <input \n                        type=\"email\" \n                        name=\"email\" \n                        placeholder=\"email\" \n                        value={inputs.email}\n                        required\n                        onChange= { handleChange }\n                    />\n                </label>\n                <label htmlFor=\"password\">\n                    Password\n                    <input \n                        type=\"password\" \n                        name=\"password\" \n                        placeholder=\"password\" \n                        value={inputs.password }\n                        required\n                        onChange= { handleChange }\n                    />\n                </label>\n                <button type=\"submit\">Sign Up!</button>\n            </fieldset>\n        </Form>\n    )\n}\n\nexport default SignUpForm;"]},"metadata":{},"sourceType":"module"}