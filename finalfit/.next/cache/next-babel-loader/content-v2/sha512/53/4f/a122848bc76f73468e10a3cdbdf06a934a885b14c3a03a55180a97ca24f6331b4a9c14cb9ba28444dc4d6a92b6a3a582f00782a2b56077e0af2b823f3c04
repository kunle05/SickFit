{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"/Users/olakunleyusuf/Desktop/Kunle Kodes/Node Server/Advanced-React/finalfit/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/olakunleyusuf/Desktop/Kunle Kodes/Node Server/Advanced-React/finalfit/pages/order.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query SINGLE_ORDER_QUERY($id: ID!) {\\n        order(id: $id) {\\n            id\\n            total\\n            charge\\n            items {\\n                title\\n                description\\n                price\\n                quantity\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from \"@apollo/client\";\nvar SINGLE_ORDER_QUERY = gql(_templateObject());\n\nvar order = function order(_ref) {\n  _s();\n\n  var query = _ref.query;\n\n  var _useQuery = useQuery(SINGLE_ORDER_QUERY, {\n    variables: {\n      id: query.id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 24\n  }, _this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.order.total\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(order, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\nexport default order;","map":{"version":3,"sources":["/Users/olakunleyusuf/Desktop/Kunle Kodes/Node Server/Advanced-React/finalfit/pages/order.js"],"names":["useQuery","SINGLE_ORDER_QUERY","gql","order","query","variables","id","data","loading","error","total"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AAEA,IAAMC,kBAAkB,GAAGC,GAAH,mBAAxB;;AAgBA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAe;AAAA;;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,kBACQJ,QAAQ,CAACC,kBAAD,EAAqB;AAACI,IAAAA,SAAS,EAAE;AAACC,MAAAA,EAAE,EAAEF,KAAK,CAACE;AAAX;AAAZ,GAArB,CADhB;AAAA,MACjBC,IADiB,aACjBA,IADiB;AAAA,MACXC,OADW,aACXA,OADW;AAAA,MACFC,KADE,aACFA,KADE;;AAEzB,MAAGD,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAEZ,sBACI;AAAA,2BACI;AAAA,gBAAID,IAAI,CAACJ,KAAL,CAAWO;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CATD;;GAAMP,K;UAC+BH,Q;;;AAUrC,eAAeG,KAAf","sourcesContent":["import { useQuery } from \"@apollo/client\";\n\nconst SINGLE_ORDER_QUERY = gql`\n    query SINGLE_ORDER_QUERY($id: ID!) {\n        order(id: $id) {\n            id\n            total\n            charge\n            items {\n                title\n                description\n                price\n                quantity\n            }\n        }\n    }\n`;\n\nconst order = ({ query }) => {\n    const { data, loading, error } = useQuery(SINGLE_ORDER_QUERY, {variables: {id: query.id} });\n    if(loading) return <p>loading...</p>\n\n    return (\n        <div>\n            <p>{data.order.total}</p>\n        </div>\n    );\n};\n\nexport default order;"]},"metadata":{},"sourceType":"module"}