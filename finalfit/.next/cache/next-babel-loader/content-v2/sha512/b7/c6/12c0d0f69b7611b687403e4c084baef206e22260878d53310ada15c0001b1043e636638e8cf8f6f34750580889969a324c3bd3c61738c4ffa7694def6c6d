{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/olakunleyusuf/Desktop/Kunle Kodes/Node Server/Advanced-React/finalfit/components/Order.js\";\nimport Head from 'next/head';\nimport { gql, useQuery } from \"@apollo/client\";\nimport { format } from 'date-fns';\nimport OrderStyles from '../components/styles/OrderStyles';\nimport ErrorMessage from '../components/ErrorMessage';\nimport formatMoney from \"../lib/formatMoney\";\nconst SINGLE_ORDER_QUERY = gql`\n    query SINGLE_ORDER_QUERY($id: ID!) {\n        order(id: $id) {\n            id\n            total\n            charge\n            createdAt\n            items {\n                id\n                image\n                title\n                description\n                price\n                quantity\n            }\n        }\n    }\n`;\n\nconst Order = ({\n  id\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(SINGLE_ORDER_QUERY, {\n    variables: {\n      id\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 22\n  }, this);\n  const {\n    order\n  } = data;\n  return /*#__PURE__*/_jsxDEV(OrderStyles, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Sick Fits - \", order.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Order Id:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: order.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Charge:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: order.charge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Order Total:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: formatMoney(order.total)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Order Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: format(new Date(order.createdAt), 'MM d, yyyy h:mm a')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Items Count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: order.items.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items\",\n      children: order.items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.image,\n          alt: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Qty: \", item.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Each: \", formatMoney(item.price)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Sub Total: \", formatMoney(item.price * item.quantity)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Order;","map":{"version":3,"sources":["/Users/olakunleyusuf/Desktop/Kunle Kodes/Node Server/Advanced-React/finalfit/components/Order.js"],"names":["Head","gql","useQuery","format","OrderStyles","ErrorMessage","formatMoney","SINGLE_ORDER_QUERY","Order","id","loading","error","data","variables","message","order","charge","total","Date","createdAt","items","length","map","item","image","title","quantity","price","description"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,MAAMC,kBAAkB,GAAGN,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;;AAmBA,MAAMO,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AACtB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BV,QAAQ,CAACK,kBAAD,EAAqB;AAACM,IAAAA,SAAS,EAAE;AAACJ,MAAAA;AAAD;AAAZ,GAArB,CAAzC;AACA,MAAGC,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACZ,MAAGC,KAAH,EAAU,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA,KAAK,CAACG;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACV,QAAM;AAAEC,IAAAA;AAAF,MAAYH,IAAlB;AAEA,sBACI,QAAC,WAAD;AAAA,4BACI,QAAC,IAAD;AAAA,6BACI;AAAA,mCAAoBG,KAAK,CAACN,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAOM,KAAK,CAACN;AAAb;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAQI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAOM,KAAK,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eAYI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAOV,WAAW,CAACS,KAAK,CAACE,KAAP;AAAlB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,eAgBI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAOd,MAAM,CAAC,IAAIe,IAAJ,CAASH,KAAK,CAACI,SAAf,CAAD,EAA4B,mBAA5B;AAAb;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ,eAoBI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAOJ,KAAK,CAACK,KAAN,CAAYC;AAAnB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YApBJ,eAwBI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBACKN,KAAK,CAACK,KAAN,CAAYE,GAAZ,CAAgBC,IAAI,iBACjB;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAK,UAAA,GAAG,EAAEA,IAAI,CAACC,KAAf;AAAsB,UAAA,GAAG,EAAED,IAAI,CAACE;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACI;AAAA,sBAAKF,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,gCAASF,IAAI,CAACG,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,iCAAUpB,WAAW,CAACiB,IAAI,CAACI,KAAN,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA,sCAAerB,WAAW,CAACiB,IAAI,CAACI,KAAL,GAAaJ,IAAI,CAACG,QAAnB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA,sBAAIH,IAAI,CAACK;AAAT;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAAiCL,IAAI,CAACd,EAAtC;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0CH,CAhDD;;AAkDA,eAAeD,KAAf","sourcesContent":["import Head from 'next/head';\nimport { gql, useQuery } from \"@apollo/client\";\nimport { format } from 'date-fns';\nimport OrderStyles from '../components/styles/OrderStyles'\nimport ErrorMessage from '../components/ErrorMessage'\nimport formatMoney from \"../lib/formatMoney\";\n\nconst SINGLE_ORDER_QUERY = gql`\n    query SINGLE_ORDER_QUERY($id: ID!) {\n        order(id: $id) {\n            id\n            total\n            charge\n            createdAt\n            items {\n                id\n                image\n                title\n                description\n                price\n                quantity\n            }\n        }\n    }\n`;\n\nconst Order = ({ id }) => {\n    const { loading, error, data } = useQuery(SINGLE_ORDER_QUERY, {variables: {id} });\n    if(loading) return <p>loading...</p>\n    if(error) return <ErrorMessage error={error.message} />\n    const { order } = data; \n\n    return (\n        <OrderStyles>\n            <Head>\n                <title>Sick Fits - {order.id}</title>\n            </Head>\n            <p>\n                <span>Order Id:</span>\n                <span>{order.id}</span>\n            </p>\n            <p>\n                <span>Charge:</span>\n                <span>{order.charge}</span>\n            </p>\n            <p>\n                <span>Order Total:</span>\n                <span>{formatMoney(order.total)}</span>\n            </p>\n            <p>\n                <span>Order Date:</span>\n                <span>{format(new Date(order.createdAt), 'MM d, yyyy h:mm a')}</span>\n            </p>\n            <p>\n                <span>Items Count</span>\n                <span>{order.items.length}</span>\n            </p>\n            <div className=\"items\">\n                {order.items.map(item => (\n                    <div className=\"order-item\" key={item.id}>\n                        <img src={item.image} alt={item.title} />\n                        <div className=\"item-details\">\n                            <h2>{item.title}</h2>\n                            <p>Qty: {item.quantity}</p>\n                            <p>Each: {formatMoney(item.price)}</p>\n                            <p>Sub Total: {formatMoney(item.price * item.quantity)}</p>\n                            <p>{item.description}</p>\n                        </div>\n                    </div>\n                ))}\n            </div>\n\n        </OrderStyles>\n    );\n};\n\nexport default Order;"]},"metadata":{},"sourceType":"module"}