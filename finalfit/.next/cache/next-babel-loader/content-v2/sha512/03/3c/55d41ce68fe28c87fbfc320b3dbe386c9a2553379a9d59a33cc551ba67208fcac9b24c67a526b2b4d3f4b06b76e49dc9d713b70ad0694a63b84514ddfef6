{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"/Users/olakunleyusuf/Desktop/Kunle Kodes/Node Server/Advanced-React/finalfit/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/olakunleyusuf/Desktop/Kunle Kodes/Node Server/Advanced-React/finalfit/pages/orders.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query ALL_ORDER_QUERY {\\n        orders {\\n            id\\n            total\\n            charge\\n            items {\\n                id\\n                image\\n                title\\n                description\\n                price\\n                quantity\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Head from 'next/head';\nimport { gql, useQuery } from \"@apollo/client\";\nimport OrderStyles from '../components/styles/OrderStyles';\nimport ErrorMessage from '../components/ErrorMessage';\nimport formatMoney from \"../lib/formatMoney\";\nvar ALL_ORDER_QUERY = gql(_templateObject());\n\nvar Orders = function Orders() {\n  _s();\n\n  var _useQuery = useQuery(ALL_ORDER_QUERY),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 24\n  }, _this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 22\n  }, _this);\n  var orders = data.orders;\n  console.log(orders);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"All orders page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Orders, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Orders;\nexport default Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["/Users/olakunleyusuf/Desktop/Kunle Kodes/Node Server/Advanced-React/finalfit/pages/orders.js"],"names":["Head","gql","useQuery","OrderStyles","ErrorMessage","formatMoney","ALL_ORDER_QUERY","Orders","loading","error","data","message","orders","console","log"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,IAAMC,eAAe,GAAGL,GAAH,mBAArB;;AAkBA,IAAMM,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AAAA,kBACgBL,QAAQ,CAACI,eAAD,CADxB;AAAA,MACTE,OADS,aACTA,OADS;AAAA,MACAC,KADA,aACAA,KADA;AAAA,MACOC,IADP,aACOA,IADP;;AAEjB,MAAGF,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACZ,MAAGC,KAAH,EAAU,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA,KAAK,CAACE;AAA3B;AAAA;AAAA;AAAA;AAAA,WAAP;AAHO,MAITC,MAJS,GAIEF,IAJF,CAITE,MAJS;AAKjBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEA,sBACI;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CAZD;;GAAML,M;UAC+BL,Q;;;KAD/BK,M;AAcN,eAAeA,MAAf","sourcesContent":["import Head from 'next/head';\nimport { gql, useQuery } from \"@apollo/client\";\nimport OrderStyles from '../components/styles/OrderStyles'\nimport ErrorMessage from '../components/ErrorMessage'\nimport formatMoney from \"../lib/formatMoney\";\n\nconst ALL_ORDER_QUERY = gql`\n    query ALL_ORDER_QUERY {\n        orders {\n            id\n            total\n            charge\n            items {\n                id\n                image\n                title\n                description\n                price\n                quantity\n            }\n        }\n    }\n`;\n\nconst Orders = () => {\n    const { loading, error, data } = useQuery(ALL_ORDER_QUERY);\n    if(loading) return <p>loading...</p>\n    if(error) return <ErrorMessage error={error.message} />\n    const { orders } = data;\n    console.log(orders);\n\n    return (\n        <div>\n            <p>All orders page</p>\n        </div>\n    );\n};\n\nexport default Orders;"]},"metadata":{},"sourceType":"module"}