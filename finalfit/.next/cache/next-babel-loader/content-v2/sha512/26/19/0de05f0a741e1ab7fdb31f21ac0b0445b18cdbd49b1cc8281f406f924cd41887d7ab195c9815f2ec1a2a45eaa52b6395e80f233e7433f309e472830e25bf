{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/olakunleyusuf/Desktop/Kunle Kodes/Node Server/Advanced-React/finalfit/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/olakunleyusuf/Desktop/Kunle Kodes/Node Server/Advanced-React/finalfit/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/olakunleyusuf/Desktop/Kunle Kodes/Node Server/Advanced-React/finalfit/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/olakunleyusuf/Desktop/Kunle Kodes/Node Server/Advanced-React/finalfit/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/olakunleyusuf/Desktop/Kunle Kodes/Node Server/Advanced-React/finalfit/components/CheckOut.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation CREATE_ORDER_MUTATION($token: String!) {\\n        createOrder(token: $token) {\\n            id\\n            items\\n            charge\\n            total\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { loadStripe } from '@stripe/stripe-js';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { gql, useMutation } from '@apollo/client';\nimport { useRouter } from 'next/router';\nimport NProgress from 'nprogress';\nimport styled from 'styled-components';\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport ErrorMessage from './ErrorMessage';\nimport { CURRENT_USER_QUERY, useUser } from './User';\nimport SickButton from './styles/SickButton';\nimport { useState } from 'react';\nimport nProgress from 'nprogress';\nvar CheckOutFormStyles = styled.form.withConfig({\n  displayName: \"CheckOut__CheckOutFormStyles\",\n  componentId: \"sc-1h9ciz7-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);border:1px solid rgba(0,0,0,0.04);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;\"]);\n_c = CheckOutFormStyles;\nvar CREATE_ORDER_MUTATION = gql(_templateObject());\nvar stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nvar CheckOutForm = function CheckOutForm() {\n  _s();\n\n  var _useState = useState(),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useMutation = useMutation(CREATE_ORDER_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      placeOrder = _useMutation2[0];\n\n  var stripe = useStripe();\n  var elements = useElements(); // const me = useUser();\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _yield$stripe$createP, error, paymentMethod;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setLoading(true);\n              nProgress.start();\n              _context.next = 5;\n              return stripe.createPaymentMethod({\n                type: 'card',\n                card: elements.getElement(CardElement)\n              });\n\n            case 5:\n              _yield$stripe$createP = _context.sent;\n              error = _yield$stripe$createP.error;\n              paymentMethod = _yield$stripe$createP.paymentMethod;\n              console.log(paymentMethod);\n\n              if (error) {\n                setError(error);\n              } //\n\n\n              placeOrder({\n                variables: {\n                  token: paymentMethod.id\n                },\n                refetchQueries: [{\n                  query: CURRENT_USER_QUERY\n                }]\n              })[\"catch\"](function (err) {\n                return alert(err.message);\n              });\n              setLoading(false);\n              nProgress.done();\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(CheckOutFormStyles, {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 12\n      },\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 23\n    }, _this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(SickButton, {\n      children: \"Checkout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(CheckOutForm, \"F97FIRJLo76ogMxWY2U5rLGhu9Y=\", false, function () {\n  return [useMutation, useStripe, useElements];\n});\n\n_c2 = CheckOutForm;\n\nvar CheckOut = function CheckOut() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckOutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, _this);\n};\n\n_c3 = CheckOut;\nexport default CheckOut;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CheckOutFormStyles\");\n$RefreshReg$(_c2, \"CheckOutForm\");\n$RefreshReg$(_c3, \"CheckOut\");","map":{"version":3,"sources":["/Users/olakunleyusuf/Desktop/Kunle Kodes/Node Server/Advanced-React/finalfit/components/CheckOut.js"],"names":["loadStripe","CardElement","Elements","useElements","useStripe","gql","useMutation","useRouter","NProgress","styled","calcTotalPrice","ErrorMessage","CURRENT_USER_QUERY","useUser","SickButton","useState","nProgress","CheckOutFormStyles","form","CREATE_ORDER_MUTATION","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckOutForm","error","setError","loading","setLoading","placeOrder","stripe","elements","handleSubmit","e","preventDefault","start","createPaymentMethod","type","card","getElement","paymentMethod","console","log","variables","token","id","refetchQueries","query","err","alert","message","done","fontSize","CheckOut"],"mappings":"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","sourcesContent":["import { loadStripe } from '@stripe/stripe-js';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { gql, useMutation } from '@apollo/client';\nimport { useRouter } from 'next/router';\nimport NProgress from 'nprogress';\nimport styled from 'styled-components';\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport ErrorMessage from './ErrorMessage';\nimport { CURRENT_USER_QUERY, useUser } from './User';\nimport SickButton from './styles/SickButton';\nimport { useState } from 'react';\nimport nProgress from 'nprogress';\n\nconst CheckOutFormStyles = styled.form`\n    box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\n    border: 1px solid rgba(0, 0, 0, 0.04);\n    border-radius: 5px;\n    padding: 1rem;\n    display: grid;\n    grid-gap: 1rem;\n`;\n\nconst CREATE_ORDER_MUTATION = gql`\n    mutation CREATE_ORDER_MUTATION($token: String!) {\n        createOrder(token: $token) {\n            id\n            items\n            charge\n            total\n        }\n    }\n`;\n\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nconst CheckOutForm = () => {\n    const [error, setError] = useState();\n    const [loading, setLoading] = useState(false);\n    const [placeOrder] = useMutation(CREATE_ORDER_MUTATION)\n    const stripe = useStripe();\n    const elements = useElements();\n\n    // const me = useUser();\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        setLoading(true);\n        nProgress.start();\n\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\n            type: 'card',\n            card: elements.getElement(CardElement)\n        });\n        console.log(paymentMethod);\n\n        if(error) {\n            setError(error);\n        }\n        //\n        placeOrder({\n            variables: {\n                token: paymentMethod.id\n            },\n            refetchQueries: [{\n                query: CURRENT_USER_QUERY\n            }]\n        }).catch(err => alert(err.message));\n        setLoading(false);\n        nProgress.done();\n    }\n\n    return (\n        <CheckOutFormStyles onSubmit={handleSubmit}>\n            {error && <p style={{fontSize: 12}}>{error.message}</p>}\n            <CardElement />\n            <SickButton>Checkout</SickButton>\n        </CheckOutFormStyles>\n    );\n};\n\nconst CheckOut = () => (\n    <Elements stripe={stripeLib}>\n        <CheckOutForm />\n    </Elements>\n)\n\n\nexport default CheckOut;"]},"metadata":{},"sourceType":"module"}