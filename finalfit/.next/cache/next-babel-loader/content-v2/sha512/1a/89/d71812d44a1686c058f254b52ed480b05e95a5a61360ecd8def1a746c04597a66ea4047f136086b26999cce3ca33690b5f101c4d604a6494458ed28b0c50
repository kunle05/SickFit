{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/olakunleyusuf/Desktop/Kunle Kodes/Node Server/Advanced-React/sick-fits/finalfit/components/CreateItem.js\";\nimport { gql, useMutation } from '@apollo/client';\nimport { useRouter } from 'next/router';\nimport Form from './styles/Form';\nimport ErrorMessage from './ErrorMessage';\nimport useForm from '../lib/useForm';\nconst CREATE_ITEM_MUTATION = gql`\n    mutation CREATE_ITEM_MUTATION(\n        $title: String!\n        $description: String!\n        $price: Int!\n        $image: String\n        $largeImage: String\n    ) {\n        createItem(data: {\n            title: $title\n            description: $description\n            price: $price\n            image: $image\n            largeImage: $largeImage\n        }) {\n            id\n            title\n        }\n    }\n`;\n\nconst CreateItem = () => {\n  const router = useRouter();\n  const {\n    inputs,\n    handleChange\n  } = useForm({\n    title: \"\",\n    description: \"\",\n    image: \"\",\n    largeImage: \"\",\n    price: 0\n  });\n  const [createItem, {\n    error,\n    loading\n  }] = useMutation(CREATE_ITEM_MUTATION, {\n    update(cache, {\n      data: {\n        createItem\n      }\n    }) {\n      cache.modify({\n        fields: {\n          getAllItems(existingItems = []) {\n            const newItem = cache.writeFragment({\n              data: createItem,\n              fragment: gql`\n                                fragment NewItem on Item {\n                                    id\n                                    type\n                                }\n                            `\n            });\n            return [newItem, ...existingItems];\n          },\n\n          itemsCount(presentCount) {\n            return presentCount + 1;\n          }\n\n        }\n      });\n    }\n\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: async e => {\n      e.preventDefault();\n      let res = await createItem({\n        variables: inputs\n      });\n      router.push({\n        pathname: '/item/[id]',\n        query: {\n          id: res.data.createItem.id\n        }\n      });\n    },\n    children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: loading,\n      \"aria-busy\": loading,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        children: [\"Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"image\",\n          name: \"image\",\n          required: true,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), inputs.image && /*#__PURE__*/_jsxDEV(\"img\", {\n        width: \"200\",\n        src: inputs.image,\n        alt: \"Upload Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: [\"Title\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          name: \"title\",\n          placeholder: \"title\",\n          required: true,\n          value: inputs.title,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: [\"Price\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"price\",\n          name: \"price\",\n          placeholder: \"price\",\n          required: true,\n          value: inputs.price,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: [\"description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          placeholder: \"Enter A Description\",\n          required: true,\n          value: inputs.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\nexport default CreateItem;","map":{"version":3,"sources":["/Users/olakunleyusuf/Desktop/Kunle Kodes/Node Server/Advanced-React/sick-fits/finalfit/components/CreateItem.js"],"names":["gql","useMutation","useRouter","Form","ErrorMessage","useForm","CREATE_ITEM_MUTATION","CreateItem","router","inputs","handleChange","title","description","image","largeImage","price","createItem","error","loading","update","cache","data","modify","fields","getAllItems","existingItems","newItem","writeFragment","fragment","itemsCount","presentCount","e","preventDefault","res","variables","push","pathname","query","id"],"mappings":"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","sourcesContent":["import { gql, useMutation } from '@apollo/client';\nimport { useRouter } from 'next/router';\nimport Form from './styles/Form';\nimport ErrorMessage from './ErrorMessage';\nimport useForm from '../lib/useForm';\n\nconst CREATE_ITEM_MUTATION = gql`\n    mutation CREATE_ITEM_MUTATION(\n        $title: String!\n        $description: String!\n        $price: Int!\n        $image: String\n        $largeImage: String\n    ) {\n        createItem(data: {\n            title: $title\n            description: $description\n            price: $price\n            image: $image\n            largeImage: $largeImage\n        }) {\n            id\n            title\n        }\n    }\n`;\n\nconst CreateItem = () => {\n\n    const router = useRouter();\n    const {inputs, handleChange} = useForm({\n        title: \"\",\n        description: \"\",\n        image: \"\",\n        largeImage: \"\",\n        price: 0\n    })\n\n    const [ createItem, { error, loading } ] = useMutation(CREATE_ITEM_MUTATION, {\n        update(cache, { data: { createItem }}) {\n            cache.modify({\n                fields: {\n                    getAllItems(existingItems = []) {\n                        const newItem = cache.writeFragment({\n                            data: createItem,\n                            fragment: gql`\n                                fragment NewItem on Item {\n                                    id\n                                    type\n                                }\n                            `\n                        });\n                        return [newItem, ...existingItems];\n                    },\n                    itemsCount(presentCount) {\n                        return presentCount + 1\n                    }\n                }\n            });\n        }\n    });\n\n    return (\n        <Form onSubmit={ async e => {\n            e.preventDefault();\n            let res = await createItem({ variables: inputs });\n            router.push({\n                pathname: '/item/[id]',\n                query: { id: res.data.createItem.id }\n            })\n        }} >\n            <ErrorMessage error={ error } />\n            <fieldset disabled={loading} aria-busy={loading} >\n                <label htmlFor=\"file\">\n                    Image\n                    <input \n                        type=\"file\" \n                        id=\"image\" \n                        name=\"image\" \n                        required\n                        onChange= { handleChange }\n                    />\n                </label>\n                    { inputs.image && <img width=\"200\" src={inputs.image} alt=\"Upload Preview\" /> }\n                <label htmlFor=\"title\">\n                    Title\n                    <input \n                        type=\"text\" \n                        id=\"title\" \n                        name=\"title\" \n                        placeholder=\"title\" \n                        required\n                        value={ inputs.title }\n                        onChange= { handleChange }\n                    />\n                </label>\n                <label htmlFor=\"price\">\n                    Price\n                    <input \n                        type=\"number\" \n                        id=\"price\" \n                        name=\"price\" \n                        placeholder=\"price\" \n                        required\n                        value={ inputs.price }\n                        onChange= { handleChange }\n                    />\n                </label>\n                <label htmlFor=\"description\">\n                    description\n                    <textarea\n                        id=\"description\" \n                        name=\"description\" \n                        placeholder=\"Enter A Description\" \n                        required\n                        value={ inputs.description }\n                        onChange= { handleChange }\n                    />\n                </label>\n                <button type=\"submit\">Submit</button>\n            </fieldset>\n        </Form>\n    );\n};\n\nexport default CreateItem;"]},"metadata":{},"sourceType":"module"}