{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/olakunleyusuf/Desktop/Kunle Kodes/Node Server/Advanced-React/finalfit/components/Search.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { gql, useLazyQuery } from '@apollo/client';\nimport { resetIdCounter, useCombobox } from 'downshift';\nimport debounce from 'lodash.debounce';\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\nconst SEARCH_PRODUCTS_QUERY = gql`\n    query SEARCH_PRODUCTS_QUERY($searchTerm: String) {\n        searchTerms: getAllItems(searchTerm: $searchTerm) {\n            id\n            title\n            image\n        }\n    }\n`;\n\nconst Search = () => {\n  const [findItems, {\n    loading,\n    data,\n    error\n  }] = useLazyQuery(SEARCH_PRODUCTS_QUERY, {\n    fetchPolicy: 'no-cache'\n  });\n  const items = (data === null || data === void 0 ? void 0 : data.searchTerms) || [];\n  const findItemsButChill = debounce(findItems, 1000);\n  resetIdCounter();\n  const {\n    inputValue,\n    getMenuProps,\n    getInputProps,\n    getComboboxProps\n  } = useCombobox({\n    items: [],\n\n    onInputValueChange() {\n      findItemsButChill({\n        variables: {\n          searchTerm: inputValue\n        }\n      });\n    },\n\n    onSelectedItemChange() {\n      console.log(\"Selected Item changed\");\n    }\n\n  });\n  return /*#__PURE__*/_jsxDEV(SearchStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, getComboboxProps()), {}, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps({\n        type: 'search',\n        placeholder: 'Search for an item',\n        id: 'search',\n        className: loading ? 'loading' : ''\n      })), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, _objectSpread(_objectSpread({}, getMenuProps()), {}, {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(DropDownItem, {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 32\n      }, this))\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 12\n  }, this);\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/olakunleyusuf/Desktop/Kunle Kodes/Node Server/Advanced-React/finalfit/components/Search.js"],"names":["gql","useLazyQuery","resetIdCounter","useCombobox","debounce","DropDown","DropDownItem","SearchStyles","SEARCH_PRODUCTS_QUERY","Search","findItems","loading","data","error","fetchPolicy","items","searchTerms","findItemsButChill","inputValue","getMenuProps","getInputProps","getComboboxProps","onInputValueChange","variables","searchTerm","onSelectedItemChange","console","log","type","placeholder","id","className","map","item","title"],"mappings":";;;;;;;;;AAAA,SAASA,GAAT,EAAcC,YAAd,QAAkC,gBAAlC;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,WAA5C;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,YAAjC,QAAqD,mBAArD;AAEA,MAAMC,qBAAqB,GAAGR,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;;AAUA,MAAMS,MAAM,GAAG,MAAM;AACjB,QAAM,CAACC,SAAD,EAAY;AAACC,IAAAA,OAAD;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA;AAAhB,GAAZ,IAAsCZ,YAAY,CAACO,qBAAD,EAAwB;AAC5EM,IAAAA,WAAW,EAAE;AAD+D,GAAxB,CAAxD;AAGA,QAAMC,KAAK,GAAG,CAAAH,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEI,WAAN,KAAqB,EAAnC;AACA,QAAMC,iBAAiB,GAAGb,QAAQ,CAACM,SAAD,EAAY,IAAZ,CAAlC;AACAR,EAAAA,cAAc;AACd,QAAM;AAAEgB,IAAAA,UAAF;AAAcC,IAAAA,YAAd;AAA4BC,IAAAA,aAA5B;AAA2CC,IAAAA;AAA3C,MAAgElB,WAAW,CAAC;AAC9EY,IAAAA,KAAK,EAAE,EADuE;;AAE9EO,IAAAA,kBAAkB,GAAG;AACjBL,MAAAA,iBAAiB,CAAC;AACdM,QAAAA,SAAS,EAAE;AACPC,UAAAA,UAAU,EAAEN;AADL;AADG,OAAD,CAAjB;AAKH,KAR6E;;AAS9EO,IAAAA,oBAAoB,GAAG;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH;;AAX6E,GAAD,CAAjF;AAaA,sBAAO,QAAC,YAAD;AAAA,4BACH,+CAASN,gBAAgB,EAAzB;AAAA,6BACI,mCAAWD,aAAa,CAAC;AACrBQ,QAAAA,IAAI,EAAE,QADe;AAErBC,QAAAA,WAAW,EAAE,oBAFQ;AAGrBC,QAAAA,EAAE,EAAE,QAHiB;AAIrBC,QAAAA,SAAS,EAAEpB,OAAO,GAAG,SAAH,GAAe;AAJZ,OAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADG,eASH,QAAC,QAAD,kCAAcQ,YAAY,EAA1B;AAAA,gBACKJ,KAAK,CAACiB,GAAN,CAAUC,IAAI,iBAAI,QAAC,YAAD;AAAA,kBAAeA,IAAI,CAACC;AAApB;AAAA;AAAA;AAAA;AAAA,cAAlB;AADL;AAAA;AAAA;AAAA;AAAA,YATG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAaH,CAjCD;;AAmCA,eAAezB,MAAf","sourcesContent":["import { gql, useLazyQuery } from '@apollo/client'\nimport { resetIdCounter, useCombobox } from 'downshift';\nimport debounce from 'lodash.debounce';\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\n\nconst SEARCH_PRODUCTS_QUERY = gql`\n    query SEARCH_PRODUCTS_QUERY($searchTerm: String) {\n        searchTerms: getAllItems(searchTerm: $searchTerm) {\n            id\n            title\n            image\n        }\n    }\n`;\n\nconst Search = () => {\n    const [findItems, {loading, data, error}] = useLazyQuery(SEARCH_PRODUCTS_QUERY, {\n        fetchPolicy: 'no-cache'\n    })\n    const items = data?.searchTerms || [];\n    const findItemsButChill = debounce(findItems, 1000);\n    resetIdCounter();\n    const { inputValue, getMenuProps, getInputProps, getComboboxProps } = useCombobox({\n        items: [],\n        onInputValueChange() { \n            findItemsButChill({\n                variables: {\n                    searchTerm: inputValue\n                }\n            });\n        },\n        onSelectedItemChange() {\n            console.log(\"Selected Item changed\");\n        }\n    });\n    return <SearchStyles>\n        <div {...getComboboxProps()}>\n            <input {...getInputProps({\n                type: 'search',\n                placeholder: 'Search for an item',\n                id: 'search',\n                className: loading ? 'loading' : '',\n            })} />\n        </div>\n        <DropDown {...getMenuProps()} >\n            {items.map(item => <DropDownItem>{item.title}</DropDownItem>)}\n        </DropDown>\n    </SearchStyles>\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}