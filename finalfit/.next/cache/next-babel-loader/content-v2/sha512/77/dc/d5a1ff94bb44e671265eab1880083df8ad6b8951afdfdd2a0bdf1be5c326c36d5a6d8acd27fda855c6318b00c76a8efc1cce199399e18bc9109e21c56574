{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/olakunleyusuf/Desktop/Kunle Kodes/Node Server/Advanced-React/finalfit/components/SignInForm.js\";\nimport { gql, useMutation } from '@apollo/client';\nimport Form from './styles/Form';\nimport ErrorMessage from './ErrorMessage';\nimport useForm from '../lib/useForm';\nimport { CURRENT_USER_QUERY } from './User';\nimport { useRouter } from 'next/router';\nconst SIGNIN_MUTATION = gql`\n    mutation SIGNIN_MUTATION ($email: String!, $password: String!) {\n        signin(data: {\n            email: $email\n            password: $password\n        }) {\n            id\n            name\n            email\n        }\n    }\n`;\n\nconst SignInForm = () => {\n  const router = useRouter();\n  const {\n    inputs,\n    handleChange,\n    resetForm\n  } = useForm({\n    email: \"\",\n    password: \"\"\n  });\n  const [signin, {\n    error,\n    loading\n  }] = useMutation(SIGNIN_MUTATION, {\n    variables: inputs,\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    onSubmit: async e => {\n      e.preventDefault();\n      await signin();\n      resetForm();\n\n      if (router.pathname == \"/signup\") {\n        router.push(\"/products\");\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: loading,\n      \"aria-busy\": loading,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign Into Your Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"email\",\n          value: inputs.email,\n          required: true,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"password\",\n          value: inputs.password,\n          required: true,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign In!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\nexport default SignInForm;","map":{"version":3,"sources":["/Users/olakunleyusuf/Desktop/Kunle Kodes/Node Server/Advanced-React/finalfit/components/SignInForm.js"],"names":["gql","useMutation","Form","ErrorMessage","useForm","CURRENT_USER_QUERY","useRouter","SIGNIN_MUTATION","SignInForm","router","inputs","handleChange","resetForm","email","password","signin","error","loading","variables","refetchQueries","query","e","preventDefault","pathname","push"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,kBAAT,QAAmC,QAAnC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,MAAMC,eAAe,GAAGP,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;;AAaA,MAAMQ,UAAU,GAAG,MAAM;AACrB,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,QAAM;AAACI,IAAAA,MAAD;AAASC,IAAAA,YAAT;AAAuBC,IAAAA;AAAvB,MAAoCR,OAAO,CAAC;AAC9CS,IAAAA,KAAK,EAAE,EADuC;AAE9CC,IAAAA,QAAQ,EAAE;AAFoC,GAAD,CAAjD;AAIA,QAAM,CAACC,MAAD,EAAS;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAT,IAA6BhB,WAAW,CAACM,eAAD,EAAkB;AAC5DW,IAAAA,SAAS,EAAER,MADiD;AAE5DS,IAAAA,cAAc,EAAE,CAAC;AACbC,MAAAA,KAAK,EAAEf;AADM,KAAD;AAF4C,GAAlB,CAA9C;AAOA,sBACI,QAAC,IAAD;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,QAAQ,EAAE,MAAMgB,CAAN,IAAW;AACrCA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMP,MAAM,EAAZ;AACAH,MAAAA,SAAS;;AACT,UAAGH,MAAM,CAACc,QAAP,IAAmB,SAAtB,EAAiC;AAC7Bd,QAAAA,MAAM,CAACe,IAAP,CAAY,WAAZ;AACH;AACJ,KAPD;AAAA,2BAQI;AAAU,MAAA,QAAQ,EAAEP,OAApB;AAA6B,mBAAWA,OAAxC;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,YAAD;AAAc,QAAA,KAAK,EAAED;AAArB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,yCAEI;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,IAAI,EAAC,OAFT;AAGI,UAAA,WAAW,EAAC,OAHhB;AAII,UAAA,KAAK,EAAEN,MAAM,CAACG,KAJlB;AAKI,UAAA,QAAQ,MALZ;AAMI,UAAA,QAAQ,EAAIF;AANhB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAcI;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA,4CAEI;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,WAAW,EAAC,UAHhB;AAII,UAAA,KAAK,EAAED,MAAM,CAACI,QAJlB;AAKI,UAAA,QAAQ,MALZ;AAMI,UAAA,QAAQ,EAAIH;AANhB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ,eAyBI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH,CAnDD;;AAqDA,eAAeH,UAAf","sourcesContent":["import { gql, useMutation } from '@apollo/client';\nimport Form from './styles/Form';\nimport ErrorMessage from './ErrorMessage';\nimport useForm from '../lib/useForm';\nimport { CURRENT_USER_QUERY } from './User';\nimport { useRouter } from 'next/router';\n\nconst SIGNIN_MUTATION = gql`\n    mutation SIGNIN_MUTATION ($email: String!, $password: String!) {\n        signin(data: {\n            email: $email\n            password: $password\n        }) {\n            id\n            name\n            email\n        }\n    }\n`;\n\nconst SignInForm = () => {\n    const router = useRouter();\n    const {inputs, handleChange, resetForm} = useForm({\n        email: \"\",\n        password: \"\"\n    })\n    const [signin, {error, loading}] = useMutation(SIGNIN_MUTATION, {\n        variables: inputs,\n        refetchQueries: [{\n            query: CURRENT_USER_QUERY\n        }]\n    });\n\n    return (\n        <Form method=\"POST\" onSubmit={async e => {\n            e.preventDefault();\n            await signin();\n            resetForm();\n            if(router.pathname == \"/signup\") {\n                router.push(\"/products\")\n            }\n        }}>\n            <fieldset disabled={loading} aria-busy={loading}>\n                <h2>Sign Into Your Account</h2>\n                <ErrorMessage error={error} />\n                <label htmlFor=\"email\">\n                    Email\n                    <input \n                        type=\"email\" \n                        name=\"email\" \n                        placeholder=\"email\" \n                        value={inputs.email}\n                        required\n                        onChange= { handleChange }\n                    />\n                </label>\n                <label htmlFor=\"password\">\n                    Password\n                    <input \n                        type=\"password\" \n                        name=\"password\" \n                        placeholder=\"password\" \n                        value={inputs.password }\n                        required\n                        onChange= { handleChange }\n                    />\n                </label>\n                <button type=\"submit\">Sign In!</button>\n            </fieldset>\n        </Form>\n    )\n}\n\nexport default SignInForm;"]},"metadata":{},"sourceType":"module"}