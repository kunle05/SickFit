{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/olakunleyusuf/Desktop/Kunle Kodes/Node Server/Advanced-React/sick-fits/finalfit/components/RequestReset.js\";\nimport { gql, useMutation } from '@apollo/client';\nimport Form from './styles/Form';\nimport ErrorMessage from './ErrorMessage';\nimport useForm from '../lib/useForm';\nconst REQUEST_RESET_MUTATION = gql`\n    mutation REQUEST_RESET_MUTATION ($email: String!) {\n        requestReset(email: $email) {\n            message\n        }\n    }\n`;\n\nconst ResetForm = () => {\n  const {\n    inputs,\n    handleChange,\n    resetForm\n  } = useForm({\n    email: \"\"\n  });\n  const [reset, {\n    error,\n    loading,\n    called\n  }] = useMutation(REQUEST_RESET_MUTATION, {\n    variables: inputs\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    onSubmit: async e => {\n      e.preventDefault();\n      await reset();\n      resetForm();\n    },\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: loading,\n      \"aria-busy\": loading,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Request a password reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), !error && !loading && called && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Success! Check your email for a reset link!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 50\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"email\",\n          value: inputs.email,\n          required: true,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Request Reset!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\nexport default ResetForm;","map":{"version":3,"sources":["/Users/olakunleyusuf/Desktop/Kunle Kodes/Node Server/Advanced-React/sick-fits/finalfit/components/RequestReset.js"],"names":["gql","useMutation","Form","ErrorMessage","useForm","REQUEST_RESET_MUTATION","ResetForm","inputs","handleChange","resetForm","email","reset","error","loading","called","variables","e","preventDefault"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,MAAMC,sBAAsB,GAAGL,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA,CANA;;AAQA,MAAMM,SAAS,GAAG,MAAM;AAEpB,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA,YAAT;AAAuBC,IAAAA;AAAvB,MAAoCL,OAAO,CAAC;AAC9CM,IAAAA,KAAK,EAAE;AADuC,GAAD,CAAjD;AAGA,QAAM,CAACC,KAAD,EAAQ;AAACC,IAAAA,KAAD;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAAR,IAAoCb,WAAW,CAACI,sBAAD,EAAyB;AAC1EU,IAAAA,SAAS,EAAER;AAD+D,GAAzB,CAArD;AAIA,sBACI,QAAC,IAAD;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,QAAQ,EAAE,MAAMS,CAAN,IAAW;AACrCA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMN,KAAK,EAAX;AACAF,MAAAA,SAAS;AACZ,KAJD;AAAA,2BAKI;AAAU,MAAA,QAAQ,EAAEI,OAApB;AAA6B,mBAAWA,OAAxC;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,YAAD;AAAc,QAAA,KAAK,EAAED;AAArB;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGK,CAACA,KAAD,IAAU,CAACC,OAAX,IAAsBC,MAAtB,iBAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHrC,eAII;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,yCAEI;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,IAAI,EAAC,OAFT;AAGI,UAAA,WAAW,EAAC,OAHhB;AAII,UAAA,KAAK,EAAEP,MAAM,CAACG,KAJlB;AAKI,UAAA,QAAQ,MALZ;AAMI,UAAA,QAAQ,EAAIF;AANhB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAeI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CAlCD;;AAoCA,eAAeF,SAAf","sourcesContent":["import { gql, useMutation } from '@apollo/client';\nimport Form from './styles/Form';\nimport ErrorMessage from './ErrorMessage';\nimport useForm from '../lib/useForm';\n\nconst REQUEST_RESET_MUTATION = gql`\n    mutation REQUEST_RESET_MUTATION ($email: String!) {\n        requestReset(email: $email) {\n            message\n        }\n    }\n`;\n\nconst ResetForm = () => {\n\n    const {inputs, handleChange, resetForm} = useForm({\n        email: \"\",\n    })\n    const [reset, {error, loading, called}] = useMutation(REQUEST_RESET_MUTATION, {\n        variables: inputs,\n    });\n\n    return (\n        <Form method=\"POST\" onSubmit={async e => {\n            e.preventDefault();\n            await reset();\n            resetForm();\n        }}>\n            <fieldset disabled={loading} aria-busy={loading}>\n                <h2>Request a password reset</h2>\n                <ErrorMessage error={error} />\n                {!error && !loading && called && <p>Success! Check your email for a reset link!</p>}\n                <label htmlFor=\"email\">\n                    Email\n                    <input \n                        type=\"email\" \n                        name=\"email\" \n                        placeholder=\"email\" \n                        value={inputs.email}\n                        required\n                        onChange= { handleChange }\n                    />\n                </label>\n                <button type=\"submit\">Request Reset!</button>\n            </fieldset>\n        </Form>\n    )\n}\n\nexport default ResetForm;"]},"metadata":{},"sourceType":"module"}